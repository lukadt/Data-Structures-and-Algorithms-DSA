-------------------------------------------------------------------------------------------------------------------------------------------------

/* Reverses the words of a string */
algorithm ReverseWords(value <string>)
	Pre:		value is not null
				sb is a string buffer
	Post:		the words in value are reversed
	Returns:	the reversed word string
	last <- valuel>length - 1
	start <- last

	while last >= 0
		// skip all whitespace
		while start >= 0 && value[start] = whitespace
			start--
		end while
		last <- start
		// march start down to the index before the beginning of the word
		while start >= 0 && start != whitespace
			start--
		end while
		// append chars from start+1 to length+1 to string buffer sb
		for i <- start + 1 to last + 1
			sb.Append(i)
		end for
		// if this isn't the last word in the string add some whitespace after the word in the buffer to delimit it
		if start > 0
			sb.Append(' ')
		end if
		last <- start - 1
		start <- last
	end while
	// when a string has whitespace before the first word then we have added 1 too many bits of whitespace
	if sb[sb.Length -1] = whitespace
		// cut the whitespace
		sb.Length <- sb.Length - 1
	end if
	return sb
end ReverseWords